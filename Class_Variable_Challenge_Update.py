#Challenging Exercise: Real Estate Agency

#Requirements:
 #       Create a Property class:
  #      Instance variables: type, location, price, and sold.
   #     Class variables:
    #        agency_name: Represents the name of the real estate agency.
     #       total_properties_sold: Tracks the total number of properties sold.

   # Add the following methods:
    #    sell_property():
     #       Marks a property as sold and increments total_properties_sold.
      #      If the property is already sold, it should notify the user.
       # property_info():
        #    Prints the property details (type, location, price, and sold status).

   # Create a LuxuryProperty subclass that inherits from Property:
    #    Adds a new instance variable luxury_tax (percentage applied to the price for luxury properties).
     #   Overrides the property_info() method to include the luxury_tax.

   # Write logic to allow the agency to track:
    #    Total sales revenue generated by sold properties.
     #   A method that prints the total sales revenue for the agency.

#    Challenge:
 #       Use user input to interact with the program to "sell" properties and check their status.
sample_list = ["pro1", "pro2", "pro3", "lux1", "lux2"]
print("We have a variety of properties here, if you want to have a look, press pro + number or lux + number to go through")
print("For example: pro1, pro2, lux1, lux2")
print("For your information, Lux stand for Luxury property, so a luxury tax will apply")

class Property:
    agency_name = "Alibaba"
    total_properties_sold = 0
    total_revenue = 0
    def __init__(self,location, price, sold, type = "real estate"):
        self.type = type
        self.location = location
        self.price = price
        self.sold = sold
    def sell_property(self):
        if self.sold == "available":
            print("This property is available, are you interested in making a purchase now ? ")
            choice = int(input("Press number 1 to buy, press number 2 to consider another properties: "))
            if choice == 1:
                print("Congratulation, you have successfully purchased this property")
                self.sold = "sold out"
                Property.total_properties_sold += 1
                Property.total_revenue += self.price
                print("Total sale:", Property.total_properties_sold)
                print("Total revenue:", Property.total_revenue)

            else:
                print("Don't worry, we have another properties for you to consider")
                print("Total sale:", Property.total_properties_sold)

        else:
            print("Sorry, this property is not available, don't worry, we still have another properties for you to consider")

    def property_info(self):
        print(f"Property information: {self.type}, {self.location}, {self.price}, {self.sold}")


pro1 = Property("Chicago", 120000, "available")
pro2 = Property("British Columbia", 500000, "sold out")
pro3 = Property("Manchester", 999000, "available")

class LuxuryProperty(Property):
        def __init__(self, location, price, sold, luxury_tax, type = "real estate"):
            super().__init__(location, price, sold, type = "real estate")
            self.luxury_tax = luxury_tax
            self.price += self.price * luxury_tax
lux1 = LuxuryProperty("Alabama", 1200499, "available", 0.1)
lux2 = LuxuryProperty("Los Angeles", 5326488, "available", 0.15)


while True:
    press = input("Enter the property you want to choose: ")
    if press == "exit":
        break
    if press == "pro1":
        pro1.property_info()
        pro1.sell_property()
    if press == "pro2":
        pro2.property_info()
        pro2.sell_property()
    if press == "pro3":
        pro3.property_info()
        pro3.sell_property()
    if press == "lux1":
        lux1.property_info()
        lux1.sell_property()
    if press == "lux2":
        lux2.property_info()
        lux2.sell_property()
































































    






















